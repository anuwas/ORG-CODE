
package com.mes.ps.billing.dto.profitstars.transaction;

import java.math.BigDecimal;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TransactionProcessingSoap", targetNamespace = "https://ssl.selectpayment.com/PV")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TransactionProcessingSoap {


    /**
     * 
     * @param autoCloseDateTime
     * @param locationId
     * @param storeKey
     * @param batchNumberToCreate
     * @param entityId
     * @param storeId
     * @param terminalNumberIfKnown
     * @param isAutoCloseDateTimeRequired
     * @return
     *     returns WSUpdateResult
     */
    @WebMethod(operationName = "CreateProcessingBatch", action = "https://ssl.selectpayment.com/PV/CreateProcessingBatch")
    @WebResult(name = "CreateProcessingBatchResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "CreateProcessingBatch", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CreateProcessingBatch")
    @ResponseWrapper(localName = "CreateProcessingBatchResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CreateProcessingBatchResponse")
    public WSUpdateResult createProcessingBatch(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "locationId", targetNamespace = "https://ssl.selectpayment.com/PV")
        String locationId,
        @WebParam(name = "terminalNumberIfKnown", targetNamespace = "https://ssl.selectpayment.com/PV")
        String terminalNumberIfKnown,
        @WebParam(name = "batchNumberToCreate", targetNamespace = "https://ssl.selectpayment.com/PV")
        String batchNumberToCreate,
        @WebParam(name = "autoCloseDateTime", targetNamespace = "https://ssl.selectpayment.com/PV")
        XMLGregorianCalendar autoCloseDateTime,
        @WebParam(name = "isAutoCloseDateTimeRequired", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean isAutoCloseDateTimeRequired);

    /**
     * 
     * @param storeKey
     * @param entityId
     * @param storeId
     * @param batchNumber
     * @return
     *     returns WSUpdateResult
     */
    @WebMethod(operationName = "CloseProcessingBatch", action = "https://ssl.selectpayment.com/PV/CloseProcessingBatch")
    @WebResult(name = "CloseProcessingBatchResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "CloseProcessingBatch", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CloseProcessingBatch")
    @ResponseWrapper(localName = "CloseProcessingBatchResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CloseProcessingBatchResponse")
    public WSUpdateResult closeProcessingBatch(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "batchNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String batchNumber);

    /**
     * 
     * @param storeKey
     * @param entityId
     * @param storeId
     * @param batchNumber
     * @return
     *     returns WSBatch
     */
    @WebMethod(operationName = "GetBatch", action = "https://ssl.selectpayment.com/PV/GetBatch")
    @WebResult(name = "GetBatchResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetBatch", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetBatch")
    @ResponseWrapper(localName = "GetBatchResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetBatchResponse")
    public WSBatch getBatch(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "batchNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String batchNumber);

    /**
     * 
     * @param storeKey
     * @param entityId
     * @param storeId
     * @return
     *     returns ArrayOfWSBatch
     */
    @WebMethod(operationName = "GetAllOpenBatches", action = "https://ssl.selectpayment.com/PV/GetAllOpenBatches")
    @WebResult(name = "GetAllOpenBatchesResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetAllOpenBatches", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetAllOpenBatches")
    @ResponseWrapper(localName = "GetAllOpenBatchesResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetAllOpenBatchesResponse")
    public ArrayOfWSBatch getAllOpenBatches(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId);

    /**
     * 
     * @param storeKey
     * @param entityId
     * @param storeId
     * @return
     *     returns WSUpdateResult
     */
    @WebMethod(operationName = "CloseAllOpenBatches", action = "https://ssl.selectpayment.com/PV/CloseAllOpenBatches")
    @WebResult(name = "CloseAllOpenBatchesResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "CloseAllOpenBatches", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CloseAllOpenBatches")
    @ResponseWrapper(localName = "CloseAllOpenBatchesResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CloseAllOpenBatchesResponse")
    public WSUpdateResult closeAllOpenBatches(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId);

    /**
     * 
     * @param autoCloseDateTime
     * @param storeKey
     * @param entityId
     * @param storeId
     * @param batchNumber
     * @return
     *     returns WSUpdateResult
     */
    @WebMethod(operationName = "UpdateAutoCloseDateTime", action = "https://ssl.selectpayment.com/PV/UpdateAutoCloseDateTime")
    @WebResult(name = "UpdateAutoCloseDateTimeResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "UpdateAutoCloseDateTime", targetNamespace = "https://ssl.selectpayment.com/PV", className = "UpdateAutoCloseDateTime")
    @ResponseWrapper(localName = "UpdateAutoCloseDateTimeResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "UpdateAutoCloseDateTimeResponse")
    public WSUpdateResult updateAutoCloseDateTime(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "batchNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String batchNumber,
        @WebParam(name = "autoCloseDateTime", targetNamespace = "https://ssl.selectpayment.com/PV")
        XMLGregorianCalendar autoCloseDateTime);

    /**
     * 
     * @param storeKey
     * @param ownerApplication
     * @param updateCustomerIfExists
     * @param storeId
     * @param createCustomerIfDoesNotExists
     * @param transaction
     * @param customer
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "AuthorizeTransactionWithCustomer", action = "https://ssl.selectpayment.com/PV/AuthorizeTransactionWithCustomer")
    @WebResult(name = "AuthorizeTransactionWithCustomerResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "AuthorizeTransactionWithCustomer", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeTransactionWithCustomer")
    @ResponseWrapper(localName = "AuthorizeTransactionWithCustomerResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeTransactionWithCustomerResponse")
    public WSResponseMessage authorizeTransactionWithCustomer(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "customer", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSCustomer customer,
        @WebParam(name = "createCustomerIfDoesNotExists", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean createCustomerIfDoesNotExists,
        @WebParam(name = "updateCustomerIfExists", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean updateCustomerIfExists,
        @WebParam(name = "transaction", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSTransaction transaction,
        @WebParam(name = "ownerApplication", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSOwnerApplication ownerApplication);

    /**
     * 
     * @param storeKey
     * @param ownerApplication
     * @param storeId
     * @param transaction
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "AuthorizeTransaction", action = "https://ssl.selectpayment.com/PV/AuthorizeTransaction")
    @WebResult(name = "AuthorizeTransactionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "AuthorizeTransaction", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeTransaction")
    @ResponseWrapper(localName = "AuthorizeTransactionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeTransactionResponse")
    public WSResponseMessage authorizeTransaction(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "transaction", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSTransaction transaction,
        @WebParam(name = "ownerApplication", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSOwnerApplication ownerApplication);

    /**
     * 
     * @param locationId
     * @param storeKey
     * @param originalReferenceNumber
     * @param entityId
     * @param storeId
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "VoidTransaction", action = "https://ssl.selectpayment.com/PV/VoidTransaction")
    @WebResult(name = "VoidTransactionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "VoidTransaction", targetNamespace = "https://ssl.selectpayment.com/PV", className = "VoidTransaction")
    @ResponseWrapper(localName = "VoidTransactionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "VoidTransactionResponse")
    public WSResponseMessage voidTransaction(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "locationId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int locationId,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String originalReferenceNumber);

    /**
     * 
     * @param locationId
     * @param storeKey
     * @param originalReferenceNumber
     * @param entityId
     * @param storeId
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "RefundTransaction", action = "https://ssl.selectpayment.com/PV/RefundTransaction")
    @WebResult(name = "RefundTransactionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "RefundTransaction", targetNamespace = "https://ssl.selectpayment.com/PV", className = "RefundTransaction")
    @ResponseWrapper(localName = "RefundTransactionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "RefundTransactionResponse")
    public WSResponseMessage refundTransaction(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "locationId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int locationId,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String originalReferenceNumber);

    /**
     * 
     * @param locationId
     * @param storeKey
     * @param originalReferenceNumber
     * @param entityId
     * @param storeId
     * @param captureAmount
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "CaptureTransaction", action = "https://ssl.selectpayment.com/PV/CaptureTransaction")
    @WebResult(name = "CaptureTransactionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "CaptureTransaction", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CaptureTransaction")
    @ResponseWrapper(localName = "CaptureTransactionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "CaptureTransactionResponse")
    public WSResponseMessage captureTransaction(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "locationId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int locationId,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String originalReferenceNumber,
        @WebParam(name = "captureAmount", targetNamespace = "https://ssl.selectpayment.com/PV")
        BigDecimal captureAmount);

    /**
     * 
     * @param storeKey
     * @param recurringTransaction
     * @param updateCustomerIfExists
     * @param storeId
     * @param createCustomerIfDoesNotExists
     * @param customer
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "AuthorizeRecurringTransaction", action = "https://ssl.selectpayment.com/PV/AuthorizeRecurringTransaction")
    @WebResult(name = "AuthorizeRecurringTransactionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "AuthorizeRecurringTransaction", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeRecurringTransaction")
    @ResponseWrapper(localName = "AuthorizeRecurringTransactionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeRecurringTransactionResponse")
    public WSResponseMessage authorizeRecurringTransaction(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "customer", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSCustomer customer,
        @WebParam(name = "createCustomerIfDoesNotExists", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean createCustomerIfDoesNotExists,
        @WebParam(name = "updateCustomerIfExists", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean updateCustomerIfExists,
        @WebParam(name = "recurringTransaction", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSRecurringTransaction recurringTransaction);

    /**
     * 
     * @param addendaTransaction
     * @param storeKey
     * @param storeId
     * @return
     *     returns WSResponseMessage
     */
    @WebMethod(operationName = "AuthorizeTransactionWithAddenda", action = "https://ssl.selectpayment.com/PV/AuthorizeTransactionWithAddenda")
    @WebResult(name = "AuthorizeTransactionWithAddendaResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "AuthorizeTransactionWithAddenda", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeTransactionWithAddenda")
    @ResponseWrapper(localName = "AuthorizeTransactionWithAddendaResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "AuthorizeTransactionWithAddendaResponse")
    public WSResponseMessage authorizeTransactionWithAddenda(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "addendaTransaction", targetNamespace = "https://ssl.selectpayment.com/PV")
        WSAddendaTransaction addendaTransaction);

    /**
     * 
     * @param includeImages
     * @param transactionReferenceNumber
     * @param storeKey
     * @param entityId
     * @param storeId
     * @return
     *     returns WSTransaction
     */
    @WebMethod(operationName = "GetTransaction", action = "https://ssl.selectpayment.com/PV/GetTransaction")
    @WebResult(name = "GetTransactionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetTransaction", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransaction")
    @ResponseWrapper(localName = "GetTransactionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionResponse")
    public WSTransaction getTransaction(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "transactionReferenceNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String transactionReferenceNumber,
        @WebParam(name = "includeImages", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean includeImages);

    /**
     * 
     * @param includeImages
     * @param transField1
     * @param storeKey
     * @param entityId
     * @param storeId
     * @return
     *     returns ArrayOfWSTransaction
     */
    @WebMethod(operationName = "GetTransactionByField1", action = "https://ssl.selectpayment.com/PV/GetTransactionByField1")
    @WebResult(name = "GetTransactionByField1Result", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetTransactionByField1", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionByField1")
    @ResponseWrapper(localName = "GetTransactionByField1Response", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionByField1Response")
    public ArrayOfWSTransaction getTransactionByField1(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "TransField1", targetNamespace = "https://ssl.selectpayment.com/PV")
        String transField1,
        @WebParam(name = "includeImages", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean includeImages);

    /**
     * 
     * @param includeImages
     * @param storeKey
     * @param transactionNumber
     * @param entityId
     * @param storeId
     * @return
     *     returns WSTransaction
     */
    @WebMethod(operationName = "GetTransactionByTransactionNumber", action = "https://ssl.selectpayment.com/PV/GetTransactionByTransactionNumber")
    @WebResult(name = "GetTransactionByTransactionNumberResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetTransactionByTransactionNumber", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionByTransactionNumber")
    @ResponseWrapper(localName = "GetTransactionByTransactionNumberResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionByTransactionNumberResponse")
    public WSTransaction getTransactionByTransactionNumber(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "transactionNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String transactionNumber,
        @WebParam(name = "includeImages", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean includeImages);

    /**
     * 
     * @param includeImages
     * @param storeKey
     * @param transactionNumber
     * @param entityId
     * @param storeId
     * @return
     *     returns WSTransaction2
     */
    @WebMethod(operationName = "GetTransactionByTransactionNumber2", action = "https://ssl.selectpayment.com/PV/GetTransactionByTransactionNumber2")
    @WebResult(name = "GetTransactionByTransactionNumber2Result", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetTransactionByTransactionNumber2", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionByTransactionNumber2")
    @ResponseWrapper(localName = "GetTransactionByTransactionNumber2Response", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionByTransactionNumber2Response")
    public WSTransaction2 getTransactionByTransactionNumber2(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "transactionNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String transactionNumber,
        @WebParam(name = "includeImages", targetNamespace = "https://ssl.selectpayment.com/PV")
        boolean includeImages);

    /**
     * 
     * @param transactionReferenceNumber
     * @param storeKey
     * @param entityId
     * @param storeId
     * @return
     *     returns WSAddendaTransaction
     */
    @WebMethod(operationName = "GetTransactionWithAddenda", action = "https://ssl.selectpayment.com/PV/GetTransactionWithAddenda")
    @WebResult(name = "GetTransactionWithAddendaResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "GetTransactionWithAddenda", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionWithAddenda")
    @ResponseWrapper(localName = "GetTransactionWithAddendaResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "GetTransactionWithAddendaResponse")
    public WSAddendaTransaction getTransactionWithAddenda(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "transactionReferenceNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String transactionReferenceNumber);

    /**
     * 
     * @param terminalNumber
     * @param locationId
     * @param storeKey
     * @param entityId
     * @param storeId
     * @return
     *     returns WSUpdateResult
     */
    @WebMethod(operationName = "TestCredentials", action = "https://ssl.selectpayment.com/PV/TestCredentials")
    @WebResult(name = "TestCredentialsResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "TestCredentials", targetNamespace = "https://ssl.selectpayment.com/PV", className = "TestCredentials")
    @ResponseWrapper(localName = "TestCredentialsResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "TestCredentialsResponse")
    public WSUpdateResult testCredentials(
        @WebParam(name = "storeId", targetNamespace = "https://ssl.selectpayment.com/PV")
        long storeId,
        @WebParam(name = "storeKey", targetNamespace = "https://ssl.selectpayment.com/PV")
        String storeKey,
        @WebParam(name = "entityId", targetNamespace = "https://ssl.selectpayment.com/PV")
        int entityId,
        @WebParam(name = "locationId", targetNamespace = "https://ssl.selectpayment.com/PV")
        String locationId,
        @WebParam(name = "terminalNumber", targetNamespace = "https://ssl.selectpayment.com/PV")
        String terminalNumber);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "TestConnection", action = "https://ssl.selectpayment.com/PV/TestConnection")
    @WebResult(name = "TestConnectionResult", targetNamespace = "https://ssl.selectpayment.com/PV")
    @RequestWrapper(localName = "TestConnection", targetNamespace = "https://ssl.selectpayment.com/PV", className = "TestConnection")
    @ResponseWrapper(localName = "TestConnectionResponse", targetNamespace = "https://ssl.selectpayment.com/PV", className = "TestConnectionResponse")
    public boolean testConnection();

}
